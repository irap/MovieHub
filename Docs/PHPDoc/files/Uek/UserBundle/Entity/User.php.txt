<?php
// src/Uek/UserBundle/Entity/User.php
namespace Uek\UserBundle\Entity;

use FOS\UserBundle\Model\User as BaseUser;
use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use Symfony\Component\Security\Core\User\AdvancedUserInterface;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

/**
 * Uek\UserBundle\Entity\User
 * 
 * @ORM\Entity(repositoryClass="Uek\UserBundle\Entity\UserRepository")
 * @ORM\Table(name="uek_user")* 
 * 
 * @ORM\HasLifecycleCallbacks
 * @UniqueEntity(fields="usernameCanonical", errorPath="username", message="fos_user.username.already_used", groups={"Registration", "Profile"})
 * @UniqueEntity(fields="emailCanonical", errorPath="email", message="fos_user.email.already_used", groups={"Registration", "Profile"})
 */
class User extends BaseUser
{
	/**
	 * @ORM\Id
	 * @ORM\Column(type="integer")
	 * @ORM\GeneratedValue(strategy="AUTO")
	 */
	protected $id;

	/**
	 *
	 * @ORM\OneToMany(targetEntity="Uek\MovieBundle\Entity\Review", mappedBy="user")
	 */
	private $reviews;
	
	/**
	 * @ORM\OneToMany(targetEntity="Uek\StoreBundle\Entity\Order", mappedBy="user")
	 **/
	protected $orders;
	
	public 
function __construct() {
	parent::__construct ();
	$this->reviews = new \Doctrine\Common\Collections\ArrayCollection();
	$this->orders = new \Doctrine\Common\Collections\ArrayCollection();
	
}

	/**
	 *
	 * @see \Serializable::serialize()
	 */
	public function serialize() {
		return serialize (array(
			'id' => $this->id,
			'parentData' => parent::serialize()	)
		 );
	}

	/**
	 *
	 * @see \Serializable::unserialize()
	 */
	public function unserialize($serialized) {
		$data = unserialize($serialized);
		$this->id = $data['id'];
		parent::unserialize($data['parentData']);
	}

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Add reviews
     *
     * @param \Uek\MovieBundle\Entity\Review $reviews
     * @return User
     */
    public function addReview(\Uek\MovieBundle\Entity\Review $reviews)
    {
        $this->reviews[] = $reviews;

        return $this;
    }

    /**
     * Remove reviews
     *
     * @param \Uek\MovieBundle\Entity\Review $reviews
     */
    public function removeReview(\Uek\MovieBundle\Entity\Review $reviews)
    {
        $this->reviews->removeElement($reviews);
    }

    /**
     * Get reviews
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getReviews()
    {
        return $this->reviews;
    }

    /**
     * Add orders
     *
     * @param \Uek\StoreBundle\Entity\Order $orders
     * @return User
     */
    public function addOrder(\Uek\StoreBundle\Entity\Order $orders)
    {
        $this->orders[] = $orders;

        return $this;
    }

    /**
     * Remove orders
     *
     * @param \Uek\StoreBundle\Entity\Order $orders
     */
    public function removeOrder(\Uek\StoreBundle\Entity\Order $orders)
    {
        $this->orders->removeElement($orders);
    }

    /**
     * Get orders
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getOrders()
    {
        return $this->orders;
    }
}

